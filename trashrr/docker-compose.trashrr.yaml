networks:
  fetchrr_net:
    external: true

services:
  #===========================================================#
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun:latest
    restart: unless-stopped
    ports:
      - 8888:8888/tcp # HTTP proxy qbit?
      - 8388:8388/tcp # Shadowsocks qbit
      - 8388:8388/udp # Shadowsocks qbit
      - 8090:8090 #qbittorrent port
      - 8989:8989 # sonarr
      - 9696:9696 # prowlarr
      - 7878:7878 # radarr
      - 9117:9117 # jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VPN_SERVICE_PROVIDER=protonvpn
      - TZ=${TZ}
      - VPN_PORT_FORWARDING=on
      - PORT_FORWARD_ONLY=on
      - VPN_PORT_FORWARDING_UP_COMMAND=/bin/sh -c 'echo Updating qBittorrent port to {{PORTS}} && wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8090/api/v2/app/setPreferences 2>&1'
      ### Wireguard Settings
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=$wgPrivateKey
      - SERVER_COUNTRIES=$country
      # - SERVER_HOSTNAMES=node-ca-13.protonvpn.net
    volumes:
      - /volume1/docker/gluetun:/gluetun
    networks:
      - fetchrr_net
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun

  #===========================================================
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
      - WEBUI_PORT=8090
      # - DOCKER_MODS=arafatamim/linuxserver-io-mod-vuetorrent
    volumes:
      - /volume1/docker/qbittorrent/config:/config
      - /volume1/Media:/data
    # depends_on:
    #   - gluetun
    network_mode: service:gluetun # Use the VPN network
    networks:
      - fetchrr_net
  #===========================================================#
  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    # ports:
    # - 9117:9117/tcp
    volumes:
      - /volume1/docker/jackett/config:/config
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun # Use the VPN network
    networks:
      - fetchrr_net
  #===========================================================#
  prowlarr:
    container_name: prowlarrr
    image: lscr.io/linuxserver/prowlarr:develop
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/prowlarr/config:/config
      - /volume1/Media:/data
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun # Use the VPN network
    networks:
      - fetchrr_net
  #===========================================================#
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/radarr/config:/config
      - /volume1/Media:/data
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun # Use the VPN network
    networks:
      - fetchrr_net
    logging:
      driver: json-file
  #===========================================================#
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/appdata/sonarr:/config
      - /volume1/Media:/data
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun # Use the VPN network
    networks:
      - fetchrr_net
    logging:
      driver: json-file
  #===========================================================#
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:nightly
    restart: unless-stopped
    ports:
      - 6767:6767/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/appdata/bazarr:/config
      - /volume1/Media/media:/data/media
      - /etc/localtime:/etc/localtime:ro
    networks:
      - fetchrr_net
  #===========================================================#
