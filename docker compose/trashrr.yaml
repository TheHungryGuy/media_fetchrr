version: "3.6"

volumes:
  db:
  redis:

services:
#===========================================================#
  gluetun:
    image: qmcgaw/gluetun
    restart: unless-stopped
    container_name: vpngluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy qbit?
      - 8388:8388/tcp # Shadowsocks qbit
      - 8388:8388/udp # Shadowsocks qbit
      - 8090:8090 #qbittorrent port
      - 8989:8989 # sonarr
      - 9117:9117 # jackett
      - 7878:7878 # radarr
      #- 6767:6767 # bazarr
      - 8112:8112 # deluge
      - 6881:6881 # deluge
      - 6881:6881/udp # deluge
      - 58846:58846 #optional # deluge
      - 8341:25600 # komga
      - 3000:3000 #kaizoku
    volumes:
      - /volume1/Media/docker/gluetun:/gluetun
    environment:
      - VPNSP=private internet access
      - TZ=${TZ}
      - USER=${USER} # Your username
      - PASSWORD=${PASS} # Your password
      - REGION=US West # Your region, e.g. US East. No quotes.
      - EXTRA_SUBNETS=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12
#===========================================================#
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - /volume1/Media/docker/deluge2/config:/config
      - /volume1/Media:/data
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
#===========================================================    
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
      - WEBUI_PORT=8090
      - DOCKER_MODS=arafatamim/linuxserver-io-mod-vuetorrent
    volumes:
      - /volume1/Media/docker/qbittorrent:/config
      - /volume1/Media:/data
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped

#===========================================================#
  bazarr:
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    image: ghcr.io/hotio/bazarr:nightly
    ports:
      - 6767:6767/tcp
    restart: unless-stopped
    volumes:
      - /volume1/Media/media:/data/media
      - /etc/localtime:/etc/localtime:ro
      - /volume1/docker/appdata/bazarr:/config
      
#===========================================================#
  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    network_mode: service:gluetun
    #ports:
    # - 9117:9117/tcp
    depends_on:
      gluetun:
        condition: service_healthy
    volumes:
      - /volume1/docker/jackett:/config
      
#===========================================================#
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/Media:/data
      - /etc/localtime:/etc/localtime:ro
      - /volume1/docker/appdata/radarr:/config
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
        
#===========================================================#
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /volume1/docker/appdata/sonarr:/config
      - /volume1/Media:/data
      - /etc/localtime:/etc/localtime:ro
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
#===========================================================#
services:
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - 13378:80
    volumes:
      - ./audiobooks:/audiobooks
      - ./podcasts:/podcasts
      - ./metadata:/metadata
      - ./config:/config
    restart: unless-stopped
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      gluetun:
        condition: service_healthy
    # You can use the following user directive to run the ABS
    # docker container as a specific user. You will need to change
    # the UID and GID to the correct values for your user.
    # user: 1000:1000
  #===========================================================#

  redis:
    image: redis:7-alpine
    volumes:
      - redis:/data
  db:
    image: postgres:alpine
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U kaizoku']
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=kaizoku
      - POSTGRES_DB=kaizoku
      - POSTGRES_PASSWORD=kaizoku
    volumes:
      - db:/var/lib/postgresql/data
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
